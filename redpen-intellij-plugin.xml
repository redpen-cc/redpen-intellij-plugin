<?xml version="1.0" encoding="UTF-8"?>
<project name="redpen-intellij-plugin-generated" default="all">
  
  <property name="jdk.home.intellij_idea_sdk" value="idea"/>

  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="library.patterns">
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
  </patternset>

  <!-- JDK definitions -->

  <property name="jdk.bin.intellij_idea_sdk" value="${java.home}/../bin"/>
  <path id="jdk.classpath.intellij_idea_sdk">
    <fileset dir="${jdk.home.intellij_idea_sdk}">
      <include name="lib/*.jar"/>
    </fileset>
  </path>

  <property name="project.jdk.home" value="${jdk.home.intellij_idea_sdk}"/>
  <property name="project.jdk.bin" value="${jdk.bin.intellij_idea_sdk}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.intellij_idea_sdk"/>

  <property name="kotlin.lib" value="${jdk.home.intellij_idea_sdk}/plugins/Kotlin/kotlinc/lib"/>
  <typedef resource="org/jetbrains/kotlin/ant/antlib.xml" classpath="${kotlin.lib}/kotlin-ant.jar"/>

  <!-- Module redpen-intellij-plugin -->

  <dirname property="module.redpen-intellij-plugin.basedir" file="${ant.file}"/>

  <property name="module.jdk.home.redpen-intellij-plugin" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.redpen-intellij-plugin" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.redpen-intellij-plugin" value="${project.jdk.classpath}"/>

  <property name="compiler.args.redpen-intellij-plugin" value="-encoding UTF-8 -source 8 -target 1.8 ${compiler.args}"/>

  <property name="redpen-intellij-plugin.output.dir" value="${module.redpen-intellij-plugin.basedir}/out/production/redpen-intellij-plugin"/>
  <property name="redpen-intellij-plugin.testoutput.dir" value="${module.redpen-intellij-plugin.basedir}/out/test/redpen-intellij-plugin"/>

  <path id="redpen-intellij-plugin.module.production.classpath">
    <fileset dir="${basedir}/lib/default">
      <patternset refid="library.patterns"/>
    </fileset>
    <path refid="${module.jdk.classpath.redpen-intellij-plugin}"/>
  </path>

  <path id="redpen-intellij-plugin.runtime.production.module.classpath">
    <pathelement location="${redpen-intellij-plugin.output.dir}"/>
    <fileset dir="${basedir}/lib/default">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>

  <path id="redpen-intellij-plugin.module.classpath">
    <pathelement location="${redpen-intellij-plugin.output.dir}"/>
    <fileset dir="${basedir}/lib/default">
      <patternset refid="library.patterns"/>
    </fileset>
    <fileset dir="${basedir}/lib/test">
      <patternset refid="library.patterns"/>
    </fileset>
    <path refid="${module.jdk.classpath.redpen-intellij-plugin}"/>
  </path>

  <path id="redpen-intellij-plugin.runtime.module.classpath">
    <pathelement location="${redpen-intellij-plugin.testoutput.dir}"/>
    <pathelement location="${redpen-intellij-plugin.output.dir}"/>
    <fileset dir="${basedir}/lib/default">
      <patternset refid="library.patterns"/>
    </fileset>
    <fileset dir="${basedir}/lib/test">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>

  <target name="compile.module.redpen-intellij-plugin" depends="compile.module.redpen-intellij-plugin.production,compile.module.redpen-intellij-plugin.tests" description="Compile module redpen-intellij-plugin"/>

  <target name="compile.module.redpen-intellij-plugin.production" description="Compile module redpen-intellij-plugin; production classes">
    <mkdir dir="${redpen-intellij-plugin.output.dir}"/>
    <kotlinc src="${module.redpen-intellij-plugin.basedir}/src" output="${redpen-intellij-plugin.output.dir}" moduleName="intellij">
      <classpath refid="redpen-intellij-plugin.module.production.classpath"/>
    </kotlinc>

    <copy todir="${redpen-intellij-plugin.output.dir}">
      <fileset dir="${module.redpen-intellij-plugin.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.redpen-intellij-plugin.basedir}/conf">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>

  <target name="compile.module.redpen-intellij-plugin.tests" depends="compile.module.redpen-intellij-plugin.production" description="compile module redpen-intellij-plugin; test classes">
    <mkdir dir="${redpen-intellij-plugin.testoutput.dir}"/>
    <kotlinc output="${redpen-intellij-plugin.testoutput.dir}" moduleName="intellij">
      <src path="${module.redpen-intellij-plugin.basedir}/src"/>
      <src path="${module.redpen-intellij-plugin.basedir}/test"/>
      <classpath refid="redpen-intellij-plugin.module.classpath"/>
    </kotlinc>

    <copy todir="${redpen-intellij-plugin.testoutput.dir}">
      <fileset dir="${module.redpen-intellij-plugin.basedir}/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>

  <target name="test" depends="compile.module.redpen-intellij-plugin.tests">
    <junit printsummary="yes" haltonfailure="yes" fork="yes">
      <classpath>
        <path refid="redpen-intellij-plugin.module.classpath"/>
        <path location="${redpen-intellij-plugin.output.dir}"/>
        <path location="${redpen-intellij-plugin.testoutput.dir}"/>
      </classpath>
      <formatter type="brief" usefile="no"/>
      <batchtest>
        <fileset dir="${redpen-intellij-plugin.testoutput.dir}" includes="**/*Test.class" excludes="**/BaseTest.class"/>
      </batchtest>
    </junit>
  </target>

  <target name="clean.module.redpen-intellij-plugin" description="cleanup module">
    <delete dir="${redpen-intellij-plugin.output.dir}"/>
    <delete dir="${redpen-intellij-plugin.testoutput.dir}"/>
  </target>
  
  <property name="redpen-intellij-plugin.plugin.path.jar" value="${module.redpen-intellij-plugin.basedir}/redpen-intellij-plugin.zip"/>
  
  <!-- Build archive for plugin 'redpen-intellij-plugin' -->
  <target name="plugin.build.jar.redpen-intellij-plugin" depends="compile.module.redpen-intellij-plugin" description="Build plugin archive for module &#39;redpen-intellij-plugin&#39;">
    <property name="tmp.dir.redpen-intellij-plugin" value="${module.redpen-intellij-plugin.basedir}/../temp/redpen-intellij-plugin"/>
    <mkdir dir="${tmp.dir.redpen-intellij-plugin}"/>
    <mkdir dir="${tmp.dir.redpen-intellij-plugin}/lib"/>
    <jar destfile="${tmp.dir.redpen-intellij-plugin}/lib/redpen-intellij-plugin.jar" duplicate="preserve">
      <zipfileset dir="${module.redpen-intellij-plugin.basedir}/out/production/redpen-intellij-plugin"/>
      <zipfileset file="${module.redpen-intellij-plugin.basedir}/META-INF/plugin.xml" prefix="META-INF"/>
      <manifest>
        <attribute name="Created-By" value="IntelliJ IDEA"/>
        <attribute name="Manifest-Version" value="1.0"/>
      </manifest>
    </jar>
    <copy todir="${tmp.dir.redpen-intellij-plugin}/lib/">
      <fileset dir="${module.redpen-intellij-plugin.basedir}/lib/default">
        <include name="*.jar"/>
      </fileset>
    </copy>
    <zip destfile="${redpen-intellij-plugin.plugin.path.jar}">
      <fileset dir="${module.redpen-intellij-plugin.basedir}/../temp"/>
    </zip>
    <delete dir="${tmp.dir.redpen-intellij-plugin}"/>
  </target>

  <target name="clean" depends="clean.module.redpen-intellij-plugin" description="cleanup all"/>
  
  <target name="build.modules" depends="clean, plugin.build.jar.redpen-intellij-plugin" description="build all modules"/>
  
  <target name="all" depends="build.modules,test" description="build all"/>
</project>