<?xml version="1.0" encoding="UTF-8"?>
<project name="redpen-intellij-plugin" default="all">
  
  <property name="jdk.home.intellij_idea_sdk" value="idea"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.egg"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.apk"/>
    <include name="*.swc"/>
    <include name="*.war"/>
    <include name="*.zip"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.intellij_idea_sdk" value="${java.home}/../bin"/>
  <path id="jdk.classpath.intellij_idea_sdk">
    <fileset dir="${jdk.home.intellij_idea_sdk}">
      <include name="lib/*.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.intellij_idea_sdk}"/>
  <property name="project.jdk.bin" value="${jdk.bin.intellij_idea_sdk}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.intellij_idea_sdk"/>
  
  
  <!-- Global Libraries -->
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${jdk.home.intellij_idea_sdk}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm-all.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module redpen-intellij-plugin -->
  
  <dirname property="module.redpen-intellij-plugin.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.redpen-intellij-plugin" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.redpen-intellij-plugin" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.redpen-intellij-plugin" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.redpen-intellij-plugin" value="-encoding UTF-8 -source 8 -target 1.8 ${compiler.args}"/>
  
  <property name="redpen-intellij-plugin.output.dir" value="${module.redpen-intellij-plugin.basedir}/out/production/redpen-intellij-plugin"/>
  <property name="redpen-intellij-plugin.testoutput.dir" value="${module.redpen-intellij-plugin.basedir}/out/test/redpen-intellij-plugin"/>
  
  <path id="redpen-intellij-plugin.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="redpen-intellij-plugin.module.production.classpath">
    <fileset dir="${basedir}/lib/default">
      <patternset refid="library.patterns"/>
    </fileset>
    <path refid="${module.jdk.classpath.redpen-intellij-plugin}"/>
  </path>
  
  <path id="redpen-intellij-plugin.runtime.production.module.classpath">
    <pathelement location="${redpen-intellij-plugin.output.dir}"/>
    <fileset dir="${basedir}/lib/default">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="redpen-intellij-plugin.module.classpath">
    <pathelement location="${redpen-intellij-plugin.output.dir}"/>
    <fileset dir="${basedir}/lib/default">
      <patternset refid="library.patterns"/>
    </fileset>
    <fileset dir="${basedir}/lib/test">
      <patternset refid="library.patterns"/>
    </fileset>
    <path refid="${module.jdk.classpath.redpen-intellij-plugin}"/>
  </path>
  
  <path id="redpen-intellij-plugin.runtime.module.classpath">
    <pathelement location="${redpen-intellij-plugin.testoutput.dir}"/>
    <pathelement location="${redpen-intellij-plugin.output.dir}"/>
    <fileset dir="${basedir}/lib/default">
      <patternset refid="library.patterns"/>
    </fileset>
    <fileset dir="${basedir}/lib/test">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  
  <patternset id="excluded.from.module.redpen-intellij-plugin">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.redpen-intellij-plugin">
    <patternset refid="excluded.from.module.redpen-intellij-plugin"/>
  </patternset>
  
  <path id="redpen-intellij-plugin.module.sourcepath">
    <dirset dir="${module.redpen-intellij-plugin.basedir}">
      <include name="src"/>
      <include name="conf"/>
    </dirset>
  </path>
  
  <path id="redpen-intellij-plugin.module.test.sourcepath">
    <dirset dir="${module.redpen-intellij-plugin.basedir}">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.redpen-intellij-plugin" depends="compile.module.redpen-intellij-plugin.production,compile.module.redpen-intellij-plugin.tests" description="Compile module redpen-intellij-plugin"/>
  
  <target name="compile.module.redpen-intellij-plugin.production" depends="register.custom.compilers" description="Compile module redpen-intellij-plugin; production classes">
    <mkdir dir="${redpen-intellij-plugin.output.dir}"/>
    <javac2 destdir="${redpen-intellij-plugin.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.redpen-intellij-plugin}/javac">
      <compilerarg line="${compiler.args.redpen-intellij-plugin}"/>
      <bootclasspath refid="redpen-intellij-plugin.module.bootclasspath"/>
      <classpath refid="redpen-intellij-plugin.module.production.classpath"/>
      <src refid="redpen-intellij-plugin.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.redpen-intellij-plugin"/>
    </javac2>
    
    <copy todir="${redpen-intellij-plugin.output.dir}">
      <fileset dir="${module.redpen-intellij-plugin.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.redpen-intellij-plugin.basedir}/conf">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.redpen-intellij-plugin.tests" depends="register.custom.compilers,compile.module.redpen-intellij-plugin.production" description="compile module redpen-intellij-plugin; test classes" unless="skip.tests">
    <mkdir dir="${redpen-intellij-plugin.testoutput.dir}"/>
    <javac2 destdir="${redpen-intellij-plugin.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.redpen-intellij-plugin}/javac">
      <compilerarg line="${compiler.args.redpen-intellij-plugin}"/>
      <bootclasspath refid="redpen-intellij-plugin.module.bootclasspath"/>
      <classpath refid="redpen-intellij-plugin.module.classpath"/>
      <src refid="redpen-intellij-plugin.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.redpen-intellij-plugin"/>
    </javac2>
    
    <copy todir="${redpen-intellij-plugin.testoutput.dir}">
      <fileset dir="${module.redpen-intellij-plugin.basedir}/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.redpen-intellij-plugin" description="cleanup module">
    <delete dir="${redpen-intellij-plugin.output.dir}"/>
    <delete dir="${redpen-intellij-plugin.testoutput.dir}"/>
  </target>
  
  <property name="redpen-intellij-plugin.plugin.path.jar" value="${module.redpen-intellij-plugin.basedir}/redpen-intellij-plugin.zip"/>
  
  <!-- Build archive for plugin 'redpen-intellij-plugin' -->
  <target name="plugin.build.jar.redpen-intellij-plugin" depends="compile.module.redpen-intellij-plugin" description="Build plugin archive for module &#39;redpen-intellij-plugin&#39;">
    <property name="tmp.dir.redpen-intellij-plugin" value="${module.redpen-intellij-plugin.basedir}/../temp"/>
    <mkdir dir="${tmp.dir.redpen-intellij-plugin}"/>
    <mkdir dir="${tmp.dir.redpen-intellij-plugin}/lib"/>
    <jar destfile="${tmp.dir.redpen-intellij-plugin}/lib/redpen-intellij-plugin.jar" duplicate="preserve">
      <zipfileset dir="${module.redpen-intellij-plugin.basedir}/out/production/redpen-intellij-plugin"/>
      <zipfileset file="${module.redpen-intellij-plugin.basedir}/META-INF/plugin.xml" prefix="META-INF"/>
      <manifest>
        <attribute name="Created-By" value="IntelliJ IDEA"/>
        <attribute name="Manifest-Version" value="1.0"/>
      </manifest>
    </jar>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/asm-jar-4.1.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/asm-jar-4.1.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/asm-tree-jar-4.1.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/asm-tree-jar-4.1.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/asm-util-jar-4.1.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/asm-util-jar-4.1.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/json-jar-20080701.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/json-jar-20080701.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/pegdown-jar-1.4.2.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/pegdown-jar-1.4.2.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/commons-cli-jar-1.2.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/commons-cli-jar-1.2.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/slf4j-api-jar-1.7.6.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/slf4j-api-jar-1.7.6.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/asm-analysis-jar-4.1.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/asm-analysis-jar-4.1.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/commons-lang3-jar-3.4.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/commons-lang3-jar-3.4.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/redpen-core-jar-1.4.3.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/redpen-core-jar-1.4.3.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/logback-core-jar-1.1.1.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/logback-core-jar-1.1.1.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/kuromoji-core-jar-0.9.0.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/kuromoji-core-jar-0.9.0.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/kuromoji-ipadic-jar-0.9.0.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/kuromoji-ipadic-jar-0.9.0.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/logback-classic-jar-1.1.1.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/logback-classic-jar-1.1.1.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/parboiled-core-bundle-1.1.6.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/parboiled-core-bundle-1.1.6.jar"/>
    <copy file="${module.redpen-intellij-plugin.basedir}/lib/default/parboiled-java-bundle-1.1.6.jar" tofile="${tmp.dir.redpen-intellij-plugin}/lib/parboiled-java-bundle-1.1.6.jar"/>
    <zip destfile="${redpen-intellij-plugin.plugin.path.jar}">
      <fileset dir="${module.redpen-intellij-plugin.basedir}/../temp"/>
    </zip>
    <delete dir="${tmp.dir.redpen-intellij-plugin}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.redpen-intellij-plugin" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, plugin.build.jar.redpen-intellij-plugin" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>